name: "HC_l_net"

###################################################
# Data Layer
###################################################

# Training Data
layer {
  name: "Outer_Fold_1_train_Inner_Fold_1_X"
  type: "HDF5Data"
  top: "Outer_Fold_1_train_Inner_Fold_1_X"
  top: "Outer_Fold_1_train_Inner_Fold_1_y"
  include {
    phase: TRAIN
  }
  hdf5_data_param {
    source: "train.txt"
    batch_size: 256
    shuffle: true
  }
}

# Test Data
layer {
  name: "Outer_Fold_1_train_Inner_Fold_1_X"
  type: "HDF5Data"
  top: "Outer_Fold_1_train_Inner_Fold_1_X"
  top: "Outer_Fold_1_train_Inner_Fold_1_y"
  include {
    phase: TEST
  }
  hdf5_data_param {
    source: "test.txt"
    batch_size: 256
    shuffle: true
  }
}


###################################
# Feed forward layers
#
layer {
  name: "ff1"
  type: "InnerProduct"
  bottom: "Outer_Fold_1_train_Inner_Fold_1_X"
  top: "ff1"
  param {
    lr_mult: 2
    decay_mult: 1
  }
  inner_product_param {
    num_output: 96
    weight_filler {
      type: "gaussian"
      std: 0.102
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}

layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ff1"
  top: "ff1"
}
layer {
  name: "drop1"
  type: "Dropout"
  bottom: "ff1"
  top: "ff1"
  dropout_param {
    dropout_ratio: 0.5
  }
}


layer {
  name: "ff2"
  type: "InnerProduct"
  bottom: "ff1"
  top: "ff2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  inner_product_param {
    num_output: 96
    weight_filler {
      type: "gaussian"
      std: 0.102
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}

layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ff2"
  top: "ff2"
}

layer {
  name: "drop2"
  type: "Dropout"
  bottom: "ff2"
  top: "ff2"
  dropout_param {
    dropout_ratio: 0.5
  }
}

layer {
  name: "clas"
  type: "InnerProduct"
  bottom: "ff2"
  top: "clas"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}

###################################################
# Softmax Classification
###################################################

layer {
  name: "loss"
  type: "EuclideanLoss"
  bottom: "clas"
  bottom: "Outer_Fold_1_train_Inner_Fold_1_y"
  top: "loss"
}

